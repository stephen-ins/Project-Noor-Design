{% extends 'base.admin.html.twig' %}

{% block title %}Noor Design | Admin
{% endblock %}

{# AFFICHAGE DE LA PAGE ADMINISTRATION DU SITE --> COMMANDES #}

{% block content %}

	<!-- Main content -->
	<main
		class="flex-1 p-6">
		<!-- Header -->
		<div class="flex justify-between items-center border-b pb-4 mb-6">
			<h1 class="text-2xl font-semibold">Gestion des Commandes</h1>
		</div>

		<!-- Tableau des commandes -->
		<div class="bg-white rounded-lg shadow mb-6">
			<div class="p-6">
				<div class="overflow-x-auto">
					<table id="orders-table" class="min-w-full">
						<thead class="bg-gray-50">
							<tr>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Numéro
								</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Client
								</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Montant TTC
								</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Statut
								</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Date
								</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
									Actions
								</th>
							</tr>
						</thead>
						<tbody class="divide-y divide-gray-200">
							{% if orders is defined and orders is not empty %}
								{% for order in orders %}
									<tr class="hover:bg-gray-50">
										<td class="px-6 py-4">{{ order_number(order) }}</td>
										<td class="px-6 py-4">{{ order.user.nom }}
											{{ order.user.prenom }}</td>
										<td class="px-6 py-4">{{ order.total|number_format(2, ',', ' ') }}
											€</td>
										<td class="px-6 py-4">
											{% if order.status.value == 'livrée' or order.status == constant('App\\Enum\\OrderStatus::LIVREE') %}
												<span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% elseif order.status.value == 'expédiée' or order.status == constant('App\\Enum\\OrderStatus::EXPEDIEE') %}
												<span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% elseif order.status.value == 'en attente' or order.status == constant('App\\Enum\\OrderStatus::EN_ATTENTE') %}
												<span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% elseif order.status.value == 'confirmée' or order.status == constant('App\\Enum\\OrderStatus::CONFIRMEE') %}
												<span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% elseif order.status.value == 'annulée' or order.status == constant('App\\Enum\\OrderStatus::ANNULEE') %}
												<span class="bg-red-100 text-red-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% else %}
												<span class="bg-gray-100 text-gray-800 text-xs font-medium px-2 py-0.5 rounded">{{ order.status.getLabel() }}</span>
											{% endif %}
										</td>
										<td class="px-6 py-4">{{ order.dateCommande|date('d/m/Y') }}</td>
										<td class="px-6 py-4">
											<div class="flex items-center space-x-2">
												<a href="{{ path('app_admin_order_show', {'id': order.id}) }}" class="flex items-center space-x-1 bg-blue-50 text-blue-600 border border-blue-300 rounded px-2 py-1 hover:bg-blue-100 transition-colors">
													<i class="bi bi-eye" title="Consulter la commande"></i>
													<span class="text-xs font-medium">Consulter</span>
												</a>

												<!-- Formulaire pour changer le statut rapidement -->
												<form method="post" action="{{ path('app_admin_orders_update_status', {'id': order.id}) }}" class="inline-flex">
													<select name="status" class="text-xs border border-gray-300 rounded-l py-1 px-2 bg-white">
														{% for status in ['en_attente', 'confirmée', 'expédiée', 'livrée', 'annulée'] %}
															<option value="{{ status }}" {% if order.status.value == status %} selected {% endif %}>
																{{ status|capitalize }}
															</option>
														{% endfor %}
													</select>
													<button type="submit" class="border border-gray-300 rounded-r p-1 hover:bg-gray-400">
														<i class="bi bi-check" title="Mettre à jour le statut"></i>
													</button>
												</form>
											</div>
										</td>
									</tr>
								{% endfor %}
							{% else %}
								<tr>
									<td colspan="6" class="px-6 py-4 text-center text-gray-500">Aucune commande disponible</td>
								</tr>
							{% endif %}
						</tbody>
					</table>
				</div>
			</div>
		</div>

	</main>

{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// Initialisation de DataTables pour le tableau des commandes
			let ordersTable = $('#orders-table').DataTable({
				language: {
					url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/fr-FR.json',
				},
				responsive: true,
				pageLength: 10,
				lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Toutes"]],
				dom: '<"top"lf>rt<"bottom"ip>',
				columnDefs: [
					{ "ordertable": false, "targets": 5 } // Désactive le tri sur la colonne Actions
				],
				order: [[4, 'desc']], // Tri par défaut sur la date (descendant)
				language: {
					processing:     "Traitement en cours...",
					search:         "Rechercher&nbsp;:",
					lengthMenu:     "Afficher _MENU_ commandes",
					info:           "Affichage de _START_ à _END_ sur _TOTAL_ commandes",
					infoEmpty:      "Affichage de 0 à 0 sur 0 commande",
					infoFiltered:   "(filtré de _MAX_ commandes au total)",
					infoPostFix:    "",
					loadingRecords: "Chargement en cours...",
					zeroRecords:    "Aucune commande à afficher",
					emptyTable:     "Aucune donnée disponible",
					paginate: {
						first:      "Premier",
						previous:   "Précédent",
						next:       "Suivant",
						last:       "Dernier"
					},
					aria: {
						sortAscending:  ": activer pour trier la colonne par ordre croissant",
						sortDescending: ": activer pour trier la colonne par ordre décroissant"
					}
				},
				initComplete: function() {
					// Ajout d'un filtre de statut personnalisé
					this.api().columns(3).every(function() {
						var column = this;
						var select = $('<select class="ml-2 border rounded-lg px-2 py-1"><option value="">Tous les statuts</option></select>')
							.appendTo($('.top'))
							.on('change', function() {
								var val = $.fn.dataTable.util.escapeRegex($(this).val());
								column.search(val ? val : '', true, false).draw();
							});

						// Collecte des valeurs uniques de statut
						var statuses = [];
						column.nodes().each(function(cell) {
							var statusText = $(cell).find('span').text().trim();
							if (!statuses.includes(statusText)) {
								statuses.push(statusText);
							}
						});

						// Ajout des options au select
						statuses.sort().forEach(function(status) {
							select.append('<option value="' + status + '">' + status + '</option>');
						});
					});
				}
			});
		});
	</script>
{% endblock %}
